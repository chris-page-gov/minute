"""Add recording table

Revision ID: 5008f0ccc24e
Revises: bea950bbbeda
Create Date: 2025-07-09 09:51:44.709369

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5008f0ccc24e"
down_revision: str | None = "bea950bbbeda"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recording",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("created_datetime", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("s3_file_key", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("transcription_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["transcription_id"], ["transcription.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint("transcription_s3_file_key_key", "transcription", type_="unique")
    op.drop_column("transcription", "s3_file_key")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("transcription", sa.Column("s3_file_key", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint("transcription_s3_file_key_key", "transcription", ["s3_file_key"])
    op.drop_table("recording")
    # ### end Alembic commands ###
